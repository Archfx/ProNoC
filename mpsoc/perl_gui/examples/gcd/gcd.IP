$gcd_top = bless( {
                    'description' => '',
                    'ip_name' => 'gcd',
                    'modules' => {
                                   'gcd_top' => {}
                                 },
                    'parameters' => {
                                      'Aw' => {
                                                'info' => undef,
                                                'deafult' => '5',
                                                'global_param' => undef,
                                                'content' => '',
                                                'type' => 'Fixed'
                                              },
                                      'SELw' => {
                                                  'info' => undef,
                                                  'deafult' => '4',
                                                  'global_param' => undef,
                                                  'content' => '',
                                                  'type' => 'Fixed'
                                                },
                                      'TAGw' => {
                                                  'info' => undef,
                                                  'deafult' => '3',
                                                  'global_param' => undef,
                                                  'content' => '',
                                                  'type' => 'Fixed'
                                                },
                                      'Dw' => {
                                                'info' => undef,
                                                'deafult' => '32',
                                                'global_param' => undef,
                                                'content' => '',
                                                'type' => 'Fixed'
                                              }
                                    },
                    'plugs' => {
                                 'clk' => {
                                            'clk' => {},
                                            'value' => 1,
                                            '0' => {
                                                     'name' => 'clk'
                                                   },
                                            'type' => 'num'
                                          },
                                 'reset' => {
                                              'reset' => {},
                                              'value' => 1,
                                              '0' => {
                                                       'name' => 'reset'
                                                     },
                                              'type' => 'num'
                                            },
                                 'wb_slave' => {
                                                 'value' => 1,
                                                 '0' => {
                                                          'width' => 5,
                                                          'name' => 'wb',
                                                          'addr' => '0xb800_0000	0xbfff_ffff		custom devices'
                                                        },
                                                 'type' => 'num',
                                                 'wb_slave' => {}
                                               }
                               },
                    'ports' => {
                                 's_cyc_i' => {
                                                'intfc_name' => 'plug:wb_slave[0]',
                                                'intfc_port' => 'cyc_i',
                                                'range' => '',
                                                'type' => 'input'
                                              },
                                 's_dat_i' => {
                                                'intfc_name' => 'plug:wb_slave[0]',
                                                'intfc_port' => 'dat_i',
                                                'range' => 'Dw-1       :   0',
                                                'type' => 'input'
                                              },
                                 's_err_o' => {
                                                'intfc_name' => 'plug:wb_slave[0]',
                                                'intfc_port' => 'err_o',
                                                'range' => '',
                                                'type' => 'output'
                                              },
                                 's_sel_i' => {
                                                'intfc_name' => 'plug:wb_slave[0]',
                                                'intfc_port' => 'sel_i',
                                                'range' => 'SELw-1     :   0',
                                                'type' => 'input'
                                              },
                                 's_ack_o' => {
                                                'intfc_name' => 'plug:wb_slave[0]',
                                                'intfc_port' => 'ack_o',
                                                'range' => '',
                                                'type' => 'output'
                                              },
                                 's_we_i' => {
                                               'intfc_name' => 'plug:wb_slave[0]',
                                               'intfc_port' => 'we_i',
                                               'range' => '',
                                               'type' => 'input'
                                             },
                                 's_stb_i' => {
                                                'intfc_name' => 'plug:wb_slave[0]',
                                                'intfc_port' => 'stb_i',
                                                'range' => '',
                                                'type' => 'input'
                                              },
                                 's_tag_i' => {
                                                'intfc_name' => 'plug:wb_slave[0]',
                                                'intfc_port' => 'tag_i',
                                                'range' => 'TAGw-1     :   0',
                                                'type' => 'input'
                                              },
                                 'reset' => {
                                              'intfc_name' => 'plug:reset[0]',
                                              'intfc_port' => 'reset_i',
                                              'range' => '',
                                              'type' => 'input'
                                            },
                                 'clk' => {
                                            'intfc_name' => 'plug:clk[0]',
                                            'intfc_port' => 'clk_i',
                                            'range' => '',
                                            'type' => 'input'
                                          },
                                 's_rty_o' => {
                                                'intfc_name' => 'plug:wb_slave[0]',
                                                'intfc_port' => 'rty_o',
                                                'range' => '',
                                                'type' => 'output'
                                              },
                                 's_dat_o' => {
                                                'intfc_name' => 'plug:wb_slave[0]',
                                                'intfc_port' => 'dat_o',
                                                'range' => 'Dw-1       :   0',
                                                'type' => 'output'
                                              },
                                 's_addr_i' => {
                                                 'intfc_name' => 'plug:wb_slave[0]',
                                                 'intfc_port' => 'adr_i',
                                                 'range' => 'Aw-1       :   0',
                                                 'type' => 'input'
                                               }
                               },
                    'file_name' => '/home/alireza/Mywork/mpsoc/perl_gui/examples/gcd/gcd_verilog/gcd_top.v',
                    'module_name' => 'gcd_top',
                    'category' => 'custom',
                    'header' => '
	#define  $IP_DONE_ADDR	 (*((volatile unsigned int *) ($BASE  )))
	 #define  $IP_IN_1_ADDR		(*((volatile unsigned int *) ($BASE+4)))
	 #define $IP_IN_2_ADDR		(*((volatile unsigned int *) ($BASE+8)))
	 #define $IP_GCD_ADDR		 (*((volatile unsigned int *) ($BASE+12)))

	#define $IP\\_IN1_WRITE(value)  $IP_IN_1_ADDR=value
	#define $IP\\_IN2_WRITE(value)  $IP_IN_2_ADDR=value
	
	#define   $IP_DONE_READ()     $IP_DONE_ADDR
	#define  $IP_GCD_READ()         $IP_GCD_ADDR'
                  }, 'ip_gen' );
