$altera_jtag_uart_wb = bless( {
                                'hdl_files' => [
                                                 '/mpsoc/src_peripheral/jtag/altera_jtag_uart_wb.v'
                                               ],
                                'ip_name' => 'altera_jtag_uart',
                                'plugs' => {
                                             'clk' => {
                                                        'clk' => {},
                                                        'value' => 1,
                                                        '0' => {
                                                                 'name' => 'clk'
                                                               },
                                                        'type' => 'num'
                                                      },
                                             'reset' => {
                                                          'reset' => {},
                                                          'value' => 1,
                                                          '0' => {
                                                                   'name' => 'reset'
                                                                 },
                                                          'type' => 'num'
                                                        },
                                             'interrupt_peripheral' => {
                                                                         'interrupt_peripheral' => {},
                                                                         'value' => 1,
                                                                         '0' => {
                                                                                  'name' => 'interrupt_peripheral'
                                                                                },
                                                                         'type' => 'num'
                                                                       },
                                             'wb_slave' => {
                                                             'value' => 1,
                                                             '0' => {
                                                                      'width' => 5,
                                                                      'name' => 'wb_slave',
                                                                      'addr' => '0x9000_0000	0x90ff_ffff		UART16550 Controller'
                                                                    },
                                                             'type' => 'num',
                                                             'wb_slave' => {}
                                                           }
                                           },
                                'modules' => {
                                               'qsys_jtag_uart_0_scfifo_w' => {},
                                               'qsys_jtag_uart_0_scfifo_r' => {},
                                               'altera_jtag_uart_wb' => {},
                                               'qsys_jtag_uart_0' => {},
                                               'qsys_jtag_uart_0_sim_scfifo_r' => {},
                                               'qsys_jtag_uart_0_sim_scfifo_w' => {}
                                             },
                                'ports' => {
                                             'wb_irq' => {
                                                           'intfc_name' => 'plug:interrupt_peripheral[0]',
                                                           'intfc_port' => 'int_o',
                                                           'range' => '',
                                                           'type' => 'output'
                                                         },
                                             'cyc_i' => {
                                                          'intfc_name' => 'plug:wb_slave[0]',
                                                          'intfc_port' => 'cyc_i',
                                                          'range' => '',
                                                          'type' => 'input'
                                                        },
                                             'stb_i' => {
                                                          'intfc_name' => 'plug:wb_slave[0]',
                                                          'intfc_port' => 'stb_i',
                                                          'range' => '',
                                                          'type' => 'input'
                                                        },
                                             'dat_i' => {
                                                          'intfc_name' => 'plug:wb_slave[0]',
                                                          'intfc_port' => 'dat_i',
                                                          'range' => ' 31: 0',
                                                          'type' => 'input'
                                                        },
                                             'ack_o' => {
                                                          'intfc_name' => 'plug:wb_slave[0]',
                                                          'intfc_port' => 'ack_o',
                                                          'range' => '',
                                                          'type' => 'output'
                                                        },
                                             'rst' => {
                                                        'intfc_name' => 'plug:reset[0]',
                                                        'intfc_port' => 'reset_i',
                                                        'range' => '',
                                                        'type' => 'input'
                                                      },
                                             'readyfordata' => {
                                                                 'intfc_name' => 'IO',
                                                                 'intfc_port' => 'IO',
                                                                 'range' => '',
                                                                 'type' => 'output'
                                                               },
                                             'dat_o' => {
                                                          'intfc_name' => 'plug:wb_slave[0]',
                                                          'intfc_port' => 'dat_o',
                                                          'range' => ' 31: 0',
                                                          'type' => 'output'
                                                        },
                                             'adr_i' => {
                                                          'intfc_name' => 'plug:wb_slave[0]',
                                                          'intfc_port' => 'adr_i',
                                                          'range' => '',
                                                          'type' => 'input'
                                                        },
                                             'clk' => {
                                                        'intfc_name' => 'plug:clk[0]',
                                                        'intfc_port' => 'clk_i',
                                                        'range' => '',
                                                        'type' => 'input'
                                                      },
                                             'we_i' => {
                                                         'intfc_name' => 'plug:wb_slave[0]',
                                                         'intfc_port' => 'we_i',
                                                         'range' => '',
                                                         'type' => 'input'
                                                       },
                                             'dataavailable' => {
                                                                  'intfc_name' => 'IO',
                                                                  'intfc_port' => 'IO',
                                                                  'range' => '',
                                                                  'type' => 'output'
                                                                }
                                           },
                                'file_name' => '/home/jaytang/Desktop/alisoc/mpsoc/src_peripheral/jtag/altera_jtag_uart_wb.v',
                                'module_name' => 'altera_jtag_uart_wb',
                                'unused' => {
                                              'plug:wb_slave[0]' => [
                                                                      'err_o',
                                                                      'rty_o',
                                                                      'tag_i',
                                                                      'cti_i',
                                                                      'sel_i',
                                                                      'bte_i'
                                                                    ]
                                            },
                                'category' => 'Jtag',
                                'system_h' => '#define ${IP}_DATA_REG					(*((volatile unsigned int *) ($BASE)))
#define ${IP}_CONTROL_REG				(*((volatile unsigned int *) ($BASE+4)))
#define ${IP}_CONTROL_WSPACE_MSK	0xFFFF0000
#define ${IP}_DATA_RVALID_MSK			0x00008000
#define ${IP}_DATA_DATA_MSK			0x000000FF

//////////////////////////////*basic function for jtag_uart*////////////////////////////////////////
void jtag_putchar(char ch);
char jtag_getchar(void);
void outbyte(char c){jtag_putchar(c);} //called in xil_printf();
char inbyte(){return jtag_getchar();}

void jtag_putchar(char ch){ //print one char from jtag_uart
	while((${IP}_CONTROL_REG&${IP}_CONTROL_WSPACE_MSK)==0);
	${IP}_DATA_REG=ch;
}

char jtag_getchar(void){ //get one char from jtag_uart
	unsigned int data;
	data=${IP}_DATA_REG;
	while(!(data & ${IP}_DATA_RVALID_MSK)) //wait for terminal input
		data=${IP}_DATA_REG;
	return (data&${IP}_DATA_DATA_MSK);
}	

int jtag_scanstr(char* buf){ //scan string until <ENTER> to buf, return str length 
	char ch; unsigned int i=0;
	while(1){
		ch=jtag_getchar();
		if(ch==\'\\n\') { buf[i]=0; jtag_putchar(ch); i++; break; } //ENTER
		else if(ch==127) { xil_printf("\\b \\b"); if(i>0) i--; } //backspace
		else { jtag_putchar(ch); buf[i]=ch; i++; } //valid
	}
	return i;
}

int jtag_scanint(int *num){ //return the scanned integer
	unsigned int curr_num,strlen,i=0;
	char* str=(char*)malloc(11); if(str==NULL) { xil_printf("malloc error\\n");return 1; } //allocate memory
	strlen=jtag_scanstr(str); //scan str
	if(strlen>11) { xil_printf("overflows 32-bit integer value\\n");return 1; } //check overflow
	*num=0;
	for(i=0;i<strlen;i++){ //str2int
		curr_num=(unsigned int)str[i]-\'0\';
		if(curr_num>9); //not integer: do nothing
		else *num=*num*10+curr_num;  //is integer
	}
	return 0;
}
/////////////////////////////*END: basic function for jtag_uart*////////////////////////////////////'
                              }, 'ip_gen' );
